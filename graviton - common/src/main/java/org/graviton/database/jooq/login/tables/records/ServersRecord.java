/*
 * This file is generated by jOOQ.
*/
package org.graviton.database.jooq.login.tables.records;


import org.graviton.database.jooq.login.tables.Servers;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.0"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ServersRecord extends TableRecordImpl<ServersRecord> implements Record2<Byte, String> {

    private static final long serialVersionUID = -262457274;

    /**
     * Create a detached ServersRecord
     */
    public ServersRecord() {
        super(Servers.SERVERS);
    }

    /**
     * Create a detached, initialised ServersRecord
     */
    public ServersRecord(Byte id, String key) {
        super(Servers.SERVERS);

        set(0, id);
        set(1, key);
    }

    /**
     * Getter for <code>login.servers.id</code>.
     */
    public Byte getId() {
        return (Byte) get(0);
    }

    /**
     * Setter for <code>login.servers.id</code>.
     */
    public ServersRecord setId(Byte value) {
        set(0, value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>login.servers.key</code>.
     */
    public String getKey() {
        return (String) get(1);
    }

    /**
     * Setter for <code>login.servers.key</code>.
     */
    public ServersRecord setKey(String value) {
        set(1, value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Byte, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Byte, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field1() {
        return Servers.SERVERS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Servers.SERVERS.KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServersRecord value1(Byte value) {
        setId(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public ServersRecord value2(String value) {
        setKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServersRecord values(Byte value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }
}
