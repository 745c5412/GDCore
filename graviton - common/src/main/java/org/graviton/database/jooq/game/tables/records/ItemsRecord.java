/*
 * This file is generated by jOOQ.
*/
package org.graviton.database.jooq.game.tables.records;


import javax.annotation.Generated;

import org.graviton.database.jooq.game.tables.Items;
import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemsRecord extends TableRecordImpl<ItemsRecord> implements Record6<Integer, Integer, Short, Short, Byte, String> {

    private static final long serialVersionUID = 578280976;

    /**
     * Setter for <code>game.items.id</code>.
     */
    public ItemsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>game.items.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>game.items.owner</code>.
     */
    public ItemsRecord setOwner(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>game.items.owner</code>.
     */
    public Integer getOwner() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>game.items.template</code>.
     */
    public ItemsRecord setTemplate(Short value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>game.items.template</code>.
     */
    public Short getTemplate() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>game.items.quantity</code>.
     */
    public ItemsRecord setQuantity(Short value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>game.items.quantity</code>.
     */
    public Short getQuantity() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>game.items.position</code>.
     */
    public ItemsRecord setPosition(Byte value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>game.items.position</code>.
     */
    public Byte getPosition() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>game.items.statistics</code>.
     */
    public ItemsRecord setStatistics(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>game.items.statistics</code>.
     */
    public String getStatistics() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Short, Short, Byte, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Short, Short, Byte, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Items.ITEMS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Items.ITEMS.OWNER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return Items.ITEMS.TEMPLATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field4() {
        return Items.ITEMS.QUANTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field5() {
        return Items.ITEMS.POSITION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Items.ITEMS.STATISTICS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getOwner();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getTemplate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value4() {
        return getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value5() {
        return getPosition();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getStatistics();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord value2(Integer value) {
        setOwner(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord value3(Short value) {
        setTemplate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord value4(Short value) {
        setQuantity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord value5(Byte value) {
        setPosition(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord value6(String value) {
        setStatistics(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord values(Integer value1, Integer value2, Short value3, Short value4, Byte value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ItemsRecord
     */
    public ItemsRecord() {
        super(Items.ITEMS);
    }

    /**
     * Create a detached, initialised ItemsRecord
     */
    public ItemsRecord(Integer id, Integer owner, Short template, Short quantity, Byte position, String statistics) {
        super(Items.ITEMS);

        set(0, id);
        set(1, owner);
        set(2, template);
        set(3, quantity);
        set(4, position);
        set(5, statistics);
    }
}
