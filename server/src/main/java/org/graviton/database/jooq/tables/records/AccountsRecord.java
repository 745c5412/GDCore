/**
 * This class is generated by jOOQ
 */
package org.graviton.database.jooq.tables.records;


import javax.annotation.Generated;

import org.graviton.database.jooq.tables.Accounts;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountsRecord extends UpdatableRecordImpl<AccountsRecord> implements Record16<Integer, String, String, String, String, String, String, Byte, Byte, Byte, Integer, String, String, String, Byte, Byte> {

	private static final long serialVersionUID = 944429393;

	/**
	 * Setter for <code>login.accounts.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>login.accounts.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>login.accounts.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>login.accounts.name</code>.
	 */
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>login.accounts.password</code>.
	 */
	public void setPassword(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>login.accounts.password</code>.
	 */
	public String getPassword() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>login.accounts.salt</code>.
	 */
	public void setSalt(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>login.accounts.salt</code>.
	 */
	public String getSalt() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>login.accounts.nickname</code>.
	 */
	public void setNickname(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>login.accounts.nickname</code>.
	 */
	public String getNickname() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>login.accounts.question</code>.
	 */
	public void setQuestion(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>login.accounts.question</code>.
	 */
	public String getQuestion() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>login.accounts.answer</code>.
	 */
	public void setAnswer(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>login.accounts.answer</code>.
	 */
	public String getAnswer() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>login.accounts.rights</code>.
	 */
	public void setRights(Byte value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>login.accounts.rights</code>.
	 */
	public Byte getRights() {
		return (Byte) getValue(7);
	}

	/**
	 * Setter for <code>login.accounts.banned</code>.
	 */
	public void setBanned(Byte value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>login.accounts.banned</code>.
	 */
	public Byte getBanned() {
		return (Byte) getValue(8);
	}

	/**
	 * Setter for <code>login.accounts.muted</code>.
	 */
	public void setMuted(Byte value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>login.accounts.muted</code>.
	 */
	public Byte getMuted() {
		return (Byte) getValue(9);
	}

	/**
	 * Setter for <code>login.accounts.points</code>.
	 */
	public void setPoints(Integer value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>login.accounts.points</code>.
	 */
	public Integer getPoints() {
		return (Integer) getValue(10);
	}

	/**
	 * Setter for <code>login.accounts.channels</code>.
	 */
	public void setChannels(String value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>login.accounts.channels</code>.
	 */
	public String getChannels() {
		return (String) getValue(11);
	}

	/**
	 * Setter for <code>login.accounts.last_connection</code>.
	 */
	public void setLastConnection(String value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>login.accounts.last_connection</code>.
	 */
	public String getLastConnection() {
		return (String) getValue(12);
	}

	/**
	 * Setter for <code>login.accounts.last_address</code>.
	 */
	public void setLastAddress(String value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>login.accounts.last_address</code>.
	 */
	public String getLastAddress() {
		return (String) getValue(13);
	}

	/**
	 * Setter for <code>login.accounts.refreshed</code>.
	 */
	public void setRefreshed(Byte value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>login.accounts.refreshed</code>.
	 */
	public Byte getRefreshed() {
		return (Byte) getValue(14);
	}

	/**
	 * Setter for <code>login.accounts.friend_notification_listener</code>.
	 */
	public void setFriendNotificationListener(Byte value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>login.accounts.friend_notification_listener</code>.
	 */
	public Byte getFriendNotificationListener() {
		return (Byte) getValue(15);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record16 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row16<Integer, String, String, String, String, String, String, Byte, Byte, Byte, Integer, String, String, String, Byte, Byte> fieldsRow() {
		return (Row16) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row16<Integer, String, String, String, String, String, String, Byte, Byte, Byte, Integer, String, String, String, Byte, Byte> valuesRow() {
		return (Row16) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Accounts.ACCOUNTS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Accounts.ACCOUNTS.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Accounts.ACCOUNTS.PASSWORD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Accounts.ACCOUNTS.SALT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Accounts.ACCOUNTS.NICKNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return Accounts.ACCOUNTS.QUESTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return Accounts.ACCOUNTS.ANSWER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field8() {
		return Accounts.ACCOUNTS.RIGHTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field9() {
		return Accounts.ACCOUNTS.BANNED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field10() {
		return Accounts.ACCOUNTS.MUTED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field11() {
		return Accounts.ACCOUNTS.POINTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field12() {
		return Accounts.ACCOUNTS.CHANNELS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field13() {
		return Accounts.ACCOUNTS.LAST_CONNECTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field14() {
		return Accounts.ACCOUNTS.LAST_ADDRESS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field15() {
		return Accounts.ACCOUNTS.REFRESHED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field16() {
		return Accounts.ACCOUNTS.FRIEND_NOTIFICATION_LISTENER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getPassword();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getSalt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getNickname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getQuestion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getAnswer();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value8() {
		return getRights();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value9() {
		return getBanned();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value10() {
		return getMuted();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value11() {
		return getPoints();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value12() {
		return getChannels();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value13() {
		return getLastConnection();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value14() {
		return getLastAddress();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value15() {
		return getRefreshed();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value16() {
		return getFriendNotificationListener();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountsRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountsRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountsRecord value3(String value) {
		setPassword(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountsRecord value4(String value) {
		setSalt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountsRecord value5(String value) {
		setNickname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountsRecord value6(String value) {
		setQuestion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountsRecord value7(String value) {
		setAnswer(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountsRecord value8(Byte value) {
		setRights(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountsRecord value9(Byte value) {
		setBanned(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountsRecord value10(Byte value) {
		setMuted(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountsRecord value11(Integer value) {
		setPoints(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountsRecord value12(String value) {
		setChannels(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountsRecord value13(String value) {
		setLastConnection(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountsRecord value14(String value) {
		setLastAddress(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountsRecord value15(Byte value) {
		setRefreshed(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountsRecord value16(Byte value) {
		setFriendNotificationListener(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountsRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, Byte value8, Byte value9, Byte value10, Integer value11, String value12, String value13, String value14, Byte value15, Byte value16) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		value14(value14);
		value15(value15);
		value16(value16);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AccountsRecord
	 */
	public AccountsRecord() {
		super(Accounts.ACCOUNTS);
	}

	/**
	 * Create a detached, initialised AccountsRecord
	 */
	public AccountsRecord(Integer id, String name, String password, String salt, String nickname, String question, String answer, Byte rights, Byte banned, Byte muted, Integer points, String channels, String lastConnection, String lastAddress, Byte refreshed, Byte friendNotificationListener) {
		super(Accounts.ACCOUNTS);

		setValue(0, id);
		setValue(1, name);
		setValue(2, password);
		setValue(3, salt);
		setValue(4, nickname);
		setValue(5, question);
		setValue(6, answer);
		setValue(7, rights);
		setValue(8, banned);
		setValue(9, muted);
		setValue(10, points);
		setValue(11, channels);
		setValue(12, lastConnection);
		setValue(13, lastAddress);
		setValue(14, refreshed);
		setValue(15, friendNotificationListener);
	}
}
